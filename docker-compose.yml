version: '3.1'

services:

  # NGINX
  web:
  image: nginx
  volumes:
   - ./mysite.template:/etc/nginx/conf.d/mysite.template
  ports:
   - "8080:80"
  environment:
   - NGINX_HOST=localhost
   - NGINX_PORT=8080
  command: /bin/bash -c "envsubst < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  # MYSQL
  #db:
      #image: mysql
      #restart: always
      #environment:
       # MYSQL_DATABASE: mysql
        #MYSQL_USER: root
        #MYSQL_ROOT_PASSWORD: root

  #adminer:
    #image: adminer
    #restart: always
    #ports:
      #- 8080:8080

  # MONGODB
  #mongodb:
   # container_name: mongo
    #image: mongo
    #ports:
     # - "27017:27017"
    #volumes:
     # - .:/setup
    #command: --auth

  mongo:
      image: mongo
      restart: always
      ports:
        - "27017:27017"
      command: --auth
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example

  # NODEJS
  node:
    build:
      context: .
      args:
        - NODE_ENV=development
    # you can use legacy debug config or new inspect
    # NOTE: if nodemon isn't restarting on changes, you might be on Windows
    # which has trouble seeing file changes, so add -L to use legacy polling
    # https://github.com/remy/nodemon#application-isnt-restarting
    #command: ../node_modules/.bin/nodemon --debug=0.0.0.0:5858
    command: ../node_modules/.bin/nodemon --inspect=0.0.0.0:9229
    ports:
      - "80:80"
      - "5858:5858"
      - "9229:9229"
    volumes:
      - .:/opt/app:delegated
      # this is a workaround to prevent host node_modules from accidently getting mounted in container
      # in case you want to use node/npm both outside container for test/lint etc. and also inside container
      # this will overwrite the default node_modules dir in container so it won't conflict with our
      # /opt/node_modules location. Thanks to PR from @brnluiz
      - notused:/opt/app/node_modules
    environment:
      - NODE_ENV=development

volumes:
    notused:
